{"ast":null,"code":"var _jsxFileName = \"/Users/sunny/Desktop/workspace/ReactStudies/mosaic/src/components/App.js\";\nimport React from \"react\";\nimport hatchways from \"../hatchways\";\nimport SearchBar from \"./SearchBar\";\nimport StudentList from \"./StudentList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      students: []\n    };\n\n    this.handleCallback = term => {\n      this.setStathis.filterName(term);\n    };\n\n    this.filterName = term => {\n      const filtered = [];\n      this.state.students.forEach(student => {\n        if (student.firstName.toUpperCase().includes(term.toUpperCase())) {\n          filtered.push(student);\n        } else if (student.lastName.toUpperCase().includes(term.toUpperCase())) {\n          filtered.push(student);\n        }\n      });\n      console.log(filtered);\n      return filtered;\n    };\n\n    this.componentDidMount = async () => {\n      const response = await hatchways.get(\"/assessment/students\");\n      this.setState({\n        students: response.data.students\n      }); // this.setState({ students: response });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui container\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        parentCallback: this.handleCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(StudentList, {\n        students: this.state.students\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sunny/Desktop/workspace/ReactStudies/mosaic/src/components/App.js"],"names":["React","hatchways","SearchBar","StudentList","App","Component","state","students","handleCallback","term","setStathis","filterName","filtered","forEach","student","firstName","toUpperCase","includes","push","lastName","console","log","componentDidMount","response","get","setState","data","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADyB;;AAAA,SAGjCC,cAHiC,GAGfC,IAAD,IAAU;AAC1B,WAAKC,UAAL,CAAgBC,UAAhB,CAA2BF,IAA3B;AACA,KALgC;;AAAA,SAOjCE,UAPiC,GAOnBF,IAAD,IAAU;AACtB,YAAMG,QAAQ,GAAG,EAAjB;AACA,WAAKN,KAAL,CAAWC,QAAX,CAAoBM,OAApB,CAA6BC,OAAD,IAAa;AACxC,YAAIA,OAAO,CAACC,SAAR,CAAkBC,WAAlB,GAAgCC,QAAhC,CAAyCR,IAAI,CAACO,WAAL,EAAzC,CAAJ,EAAkE;AACjEJ,UAAAA,QAAQ,CAACM,IAAT,CAAcJ,OAAd;AACA,SAFD,MAEO,IAAIA,OAAO,CAACK,QAAR,CAAiBH,WAAjB,GAA+BC,QAA/B,CAAwCR,IAAI,CAACO,WAAL,EAAxC,CAAJ,EAAiE;AACvEJ,UAAAA,QAAQ,CAACM,IAAT,CAAcJ,OAAd;AACA;AACD,OAND;AAOAM,MAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACA,aAAOA,QAAP;AACA,KAlBgC;;AAAA,SAoBjCU,iBApBiC,GAoBb,YAAY;AAC/B,YAAMC,QAAQ,GAAG,MAAMtB,SAAS,CAACuB,GAAV,CAAc,sBAAd,CAAvB;AACA,WAAKC,QAAL,CAAc;AAAElB,QAAAA,QAAQ,EAAEgB,QAAQ,CAACG,IAAT,CAAcnB;AAA1B,OAAd,EAF+B,CAI/B;AACA,KAzBgC;AAAA;;AA2BjCoB,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACC,QAAC,SAAD;AAAW,QAAA,cAAc,EAAE,KAAKnB;AAAhC;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAMA;;AAlCgC;;AAqClC,eAAeH,GAAf","sourcesContent":["import React from \"react\";\nimport hatchways from \"../hatchways\";\nimport SearchBar from \"./SearchBar\";\nimport StudentList from \"./StudentList\";\n\nclass App extends React.Component {\n\tstate = { students: [] };\n\n\thandleCallback = (term) => {\n\t\tthis.setStathis.filterName(term);\n\t};\n\n\tfilterName = (term) => {\n\t\tconst filtered = [];\n\t\tthis.state.students.forEach((student) => {\n\t\t\tif (student.firstName.toUpperCase().includes(term.toUpperCase())) {\n\t\t\t\tfiltered.push(student);\n\t\t\t} else if (student.lastName.toUpperCase().includes(term.toUpperCase())) {\n\t\t\t\tfiltered.push(student);\n\t\t\t}\n\t\t});\n\t\tconsole.log(filtered);\n\t\treturn filtered;\n\t};\n\n\tcomponentDidMount = async () => {\n\t\tconst response = await hatchways.get(\"/assessment/students\");\n\t\tthis.setState({ students: response.data.students });\n\n\t\t// this.setState({ students: response });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ui container\">\n\t\t\t\t<SearchBar parentCallback={this.handleCallback} />\n\t\t\t\t<StudentList students={this.state.students} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}